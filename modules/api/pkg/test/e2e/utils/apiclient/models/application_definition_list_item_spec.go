// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ApplicationDefinitionListItemSpec ApplicationDefinitionListItemSpec defines the desired state of ApplicationDefinitionListItemSpec.
//
// swagger:model ApplicationDefinitionListItemSpec
type ApplicationDefinitionListItemSpec struct {

	// Description of the application. what is its purpose
	Description string `json:"description,omitempty"`

	// DocumentationURL holds a link to official documentation of the Application
	// Alternatively this can be a link to the Readme of a chart in a git repository
	DocumentationURL string `json:"documentationURL,omitempty"`

	// Labels can contain metadata about the application, such as the owner who manages it.
	Labels map[string]string `json:"labels,omitempty"`

	// Logo of the Application as a base64 encoded svg
	Logo string `json:"logo,omitempty"`

	// LogoFormat contains logo format of the configured Application. Options are "svg+xml" and "png"
	// +kubebuilder:validation:Enum=svg+xml;png
	LogoFormat string `json:"logoFormat,omitempty"`

	// SourceURL holds a link to the official source code mirror or git repository of the application
	SourceURL string `json:"sourceURL,omitempty"`
}

// Validate validates this application definition list item spec
func (m *ApplicationDefinitionListItemSpec) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this application definition list item spec based on context it is used
func (m *ApplicationDefinitionListItemSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationDefinitionListItemSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationDefinitionListItemSpec) UnmarshalBinary(b []byte) error {
	var res ApplicationDefinitionListItemSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
