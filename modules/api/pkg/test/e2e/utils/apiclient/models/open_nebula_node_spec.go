// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OpenNebulaNodeSpec OpenNebulaNodeSpec OpenNebula specific node settings
//
// swagger:model OpenNebulaNodeSpec
type OpenNebulaNodeSpec struct {

	// CPU
	CPU float64 `json:"cpu,omitempty"`

	// datastore
	Datastore string `json:"datastore,omitempty"`

	// disk size
	DiskSize int64 `json:"diskSize,omitempty"`

	// enable v n c
	EnableVNC bool `json:"enableVNC,omitempty"`

	// image
	Image string `json:"image,omitempty"`

	// memory
	Memory int64 `json:"memory,omitempty"`

	// network
	Network string `json:"network,omitempty"`

	// v CPU
	VCPU int64 `json:"vcpu,omitempty"`

	// VM template extra
	VMTemplateExtra map[string]string `json:"vmTemplateExtra,omitempty"`
}

// Validate validates this open nebula node spec
func (m *OpenNebulaNodeSpec) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this open nebula node spec based on context it is used
func (m *OpenNebulaNodeSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OpenNebulaNodeSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenNebulaNodeSpec) UnmarshalBinary(b []byte) error {
	var res OpenNebulaNodeSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
