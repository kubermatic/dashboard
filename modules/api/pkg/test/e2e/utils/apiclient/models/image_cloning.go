// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ImageCloning ImageCloning represents options for kubevirt disk-image cloning.
//
// swagger:model ImageCloning
type ImageCloning struct {

	// DataVolumeSize is the size of the DataVolume used for caching the image. Default value is 11Gi.
	DataVolumeSize string `json:"dataVolumeSize,omitempty"`

	// Enabled allows you to enable/disable cloning of standard images. When this option is enabled,
	// downloading images from the http source destination will happen only once. Later,
	// Machine Controller will clone the disks using DataVolumes with the cloning source.
	Enabled bool `json:"enabled,omitempty"`

	// StorageClass represents storage-class for DataVolumes of standard images.
	StorageClass string `json:"storageClass,omitempty"`
}

// Validate validates this image cloning
func (m *ImageCloning) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this image cloning based on context it is used
func (m *ImageCloning) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ImageCloning) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ImageCloning) UnmarshalBinary(b []byte) error {
	var res ImageCloning
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
