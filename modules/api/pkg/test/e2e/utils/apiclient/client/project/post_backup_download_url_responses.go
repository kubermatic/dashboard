// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// PostBackupDownloadURLReader is a Reader for the PostBackupDownloadURL structure.
type PostBackupDownloadURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBackupDownloadURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostBackupDownloadURLCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostBackupDownloadURLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostBackupDownloadURLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostBackupDownloadURLDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostBackupDownloadURLCreated creates a PostBackupDownloadURLCreated with default headers values
func NewPostBackupDownloadURLCreated() *PostBackupDownloadURLCreated {
	return &PostBackupDownloadURLCreated{}
}

/*
PostBackupDownloadURLCreated describes a response with status code 201, with default header values.

BackupDownloadUrl
*/
type PostBackupDownloadURLCreated struct {
	Payload *models.BackupDownloadURL
}

// IsSuccess returns true when this post backup download Url created response has a 2xx status code
func (o *PostBackupDownloadURLCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post backup download Url created response has a 3xx status code
func (o *PostBackupDownloadURLCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post backup download Url created response has a 4xx status code
func (o *PostBackupDownloadURLCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post backup download Url created response has a 5xx status code
func (o *PostBackupDownloadURLCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post backup download Url created response a status code equal to that given
func (o *PostBackupDownloadURLCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostBackupDownloadURLCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrlCreated  %+v", 201, o.Payload)
}

func (o *PostBackupDownloadURLCreated) String() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrlCreated  %+v", 201, o.Payload)
}

func (o *PostBackupDownloadURLCreated) GetPayload() *models.BackupDownloadURL {
	return o.Payload
}

func (o *PostBackupDownloadURLCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupDownloadURL)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostBackupDownloadURLUnauthorized creates a PostBackupDownloadURLUnauthorized with default headers values
func NewPostBackupDownloadURLUnauthorized() *PostBackupDownloadURLUnauthorized {
	return &PostBackupDownloadURLUnauthorized{}
}

/*
PostBackupDownloadURLUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type PostBackupDownloadURLUnauthorized struct {
}

// IsSuccess returns true when this post backup download Url unauthorized response has a 2xx status code
func (o *PostBackupDownloadURLUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post backup download Url unauthorized response has a 3xx status code
func (o *PostBackupDownloadURLUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post backup download Url unauthorized response has a 4xx status code
func (o *PostBackupDownloadURLUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post backup download Url unauthorized response has a 5xx status code
func (o *PostBackupDownloadURLUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post backup download Url unauthorized response a status code equal to that given
func (o *PostBackupDownloadURLUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PostBackupDownloadURLUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrlUnauthorized ", 401)
}

func (o *PostBackupDownloadURLUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrlUnauthorized ", 401)
}

func (o *PostBackupDownloadURLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBackupDownloadURLForbidden creates a PostBackupDownloadURLForbidden with default headers values
func NewPostBackupDownloadURLForbidden() *PostBackupDownloadURLForbidden {
	return &PostBackupDownloadURLForbidden{}
}

/*
PostBackupDownloadURLForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type PostBackupDownloadURLForbidden struct {
}

// IsSuccess returns true when this post backup download Url forbidden response has a 2xx status code
func (o *PostBackupDownloadURLForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post backup download Url forbidden response has a 3xx status code
func (o *PostBackupDownloadURLForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post backup download Url forbidden response has a 4xx status code
func (o *PostBackupDownloadURLForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post backup download Url forbidden response has a 5xx status code
func (o *PostBackupDownloadURLForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post backup download Url forbidden response a status code equal to that given
func (o *PostBackupDownloadURLForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PostBackupDownloadURLForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrlForbidden ", 403)
}

func (o *PostBackupDownloadURLForbidden) String() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrlForbidden ", 403)
}

func (o *PostBackupDownloadURLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBackupDownloadURLDefault creates a PostBackupDownloadURLDefault with default headers values
func NewPostBackupDownloadURLDefault(code int) *PostBackupDownloadURLDefault {
	return &PostBackupDownloadURLDefault{
		_statusCode: code,
	}
}

/*
PostBackupDownloadURLDefault describes a response with status code -1, with default header values.

errorResponse
*/
type PostBackupDownloadURLDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the post backup download Url default response
func (o *PostBackupDownloadURLDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this post backup download Url default response has a 2xx status code
func (o *PostBackupDownloadURLDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post backup download Url default response has a 3xx status code
func (o *PostBackupDownloadURLDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post backup download Url default response has a 4xx status code
func (o *PostBackupDownloadURLDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post backup download Url default response has a 5xx status code
func (o *PostBackupDownloadURLDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post backup download Url default response a status code equal to that given
func (o *PostBackupDownloadURLDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PostBackupDownloadURLDefault) Error() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrl default  %+v", o._statusCode, o.Payload)
}

func (o *PostBackupDownloadURLDefault) String() string {
	return fmt.Sprintf("[POST /api/v2/projects/{project_id}/clusters/{cluster_id}/clusterbackup/{cluster_backup}/downloadurl][%d] postBackupDownloadUrl default  %+v", o._statusCode, o.Payload)
}

func (o *PostBackupDownloadURLDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostBackupDownloadURLDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
