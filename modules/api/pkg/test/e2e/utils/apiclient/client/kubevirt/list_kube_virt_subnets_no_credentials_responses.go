// Code generated by go-swagger; DO NOT EDIT.

package kubevirt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListKubeVirtSubnetsNoCredentialsReader is a Reader for the ListKubeVirtSubnetsNoCredentials structure.
type ListKubeVirtSubnetsNoCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListKubeVirtSubnetsNoCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListKubeVirtSubnetsNoCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListKubeVirtSubnetsNoCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListKubeVirtSubnetsNoCredentialsOK creates a ListKubeVirtSubnetsNoCredentialsOK with default headers values
func NewListKubeVirtSubnetsNoCredentialsOK() *ListKubeVirtSubnetsNoCredentialsOK {
	return &ListKubeVirtSubnetsNoCredentialsOK{}
}

/*
ListKubeVirtSubnetsNoCredentialsOK describes a response with status code 200, with default header values.

KubeVirtSubnetList
*/
type ListKubeVirtSubnetsNoCredentialsOK struct {
	Payload models.KubeVirtSubnetList
}

// IsSuccess returns true when this list kube virt subnets no credentials o k response has a 2xx status code
func (o *ListKubeVirtSubnetsNoCredentialsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list kube virt subnets no credentials o k response has a 3xx status code
func (o *ListKubeVirtSubnetsNoCredentialsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list kube virt subnets no credentials o k response has a 4xx status code
func (o *ListKubeVirtSubnetsNoCredentialsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list kube virt subnets no credentials o k response has a 5xx status code
func (o *ListKubeVirtSubnetsNoCredentialsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list kube virt subnets no credentials o k response a status code equal to that given
func (o *ListKubeVirtSubnetsNoCredentialsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListKubeVirtSubnetsNoCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/kubevirt/subnets][%d] listKubeVirtSubnetsNoCredentialsOK  %+v", 200, o.Payload)
}

func (o *ListKubeVirtSubnetsNoCredentialsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/kubevirt/subnets][%d] listKubeVirtSubnetsNoCredentialsOK  %+v", 200, o.Payload)
}

func (o *ListKubeVirtSubnetsNoCredentialsOK) GetPayload() models.KubeVirtSubnetList {
	return o.Payload
}

func (o *ListKubeVirtSubnetsNoCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListKubeVirtSubnetsNoCredentialsDefault creates a ListKubeVirtSubnetsNoCredentialsDefault with default headers values
func NewListKubeVirtSubnetsNoCredentialsDefault(code int) *ListKubeVirtSubnetsNoCredentialsDefault {
	return &ListKubeVirtSubnetsNoCredentialsDefault{
		_statusCode: code,
	}
}

/*
ListKubeVirtSubnetsNoCredentialsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListKubeVirtSubnetsNoCredentialsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list kube virt subnets no credentials default response
func (o *ListKubeVirtSubnetsNoCredentialsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list kube virt subnets no credentials default response has a 2xx status code
func (o *ListKubeVirtSubnetsNoCredentialsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list kube virt subnets no credentials default response has a 3xx status code
func (o *ListKubeVirtSubnetsNoCredentialsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list kube virt subnets no credentials default response has a 4xx status code
func (o *ListKubeVirtSubnetsNoCredentialsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list kube virt subnets no credentials default response has a 5xx status code
func (o *ListKubeVirtSubnetsNoCredentialsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list kube virt subnets no credentials default response a status code equal to that given
func (o *ListKubeVirtSubnetsNoCredentialsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListKubeVirtSubnetsNoCredentialsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/kubevirt/subnets][%d] listKubeVirtSubnetsNoCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *ListKubeVirtSubnetsNoCredentialsDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/providers/kubevirt/subnets][%d] listKubeVirtSubnetsNoCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *ListKubeVirtSubnetsNoCredentialsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListKubeVirtSubnetsNoCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
