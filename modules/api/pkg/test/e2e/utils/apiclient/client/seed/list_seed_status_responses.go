// Code generated by go-swagger; DO NOT EDIT.

package seed

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListSeedStatusReader is a Reader for the ListSeedStatus structure.
type ListSeedStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSeedStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSeedStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListSeedStatusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSeedStatusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListSeedStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListSeedStatusOK creates a ListSeedStatusOK with default headers values
func NewListSeedStatusOK() *ListSeedStatusOK {
	return &ListSeedStatusOK{}
}

/*
ListSeedStatusOK describes a response with status code 200, with default header values.

SeedStatus
*/
type ListSeedStatusOK struct {
	Payload []*models.SeedStatus
}

// IsSuccess returns true when this list seed status o k response has a 2xx status code
func (o *ListSeedStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list seed status o k response has a 3xx status code
func (o *ListSeedStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list seed status o k response has a 4xx status code
func (o *ListSeedStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list seed status o k response has a 5xx status code
func (o *ListSeedStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list seed status o k response a status code equal to that given
func (o *ListSeedStatusOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListSeedStatusOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatusOK  %+v", 200, o.Payload)
}

func (o *ListSeedStatusOK) String() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatusOK  %+v", 200, o.Payload)
}

func (o *ListSeedStatusOK) GetPayload() []*models.SeedStatus {
	return o.Payload
}

func (o *ListSeedStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSeedStatusUnauthorized creates a ListSeedStatusUnauthorized with default headers values
func NewListSeedStatusUnauthorized() *ListSeedStatusUnauthorized {
	return &ListSeedStatusUnauthorized{}
}

/*
ListSeedStatusUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListSeedStatusUnauthorized struct {
}

// IsSuccess returns true when this list seed status unauthorized response has a 2xx status code
func (o *ListSeedStatusUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list seed status unauthorized response has a 3xx status code
func (o *ListSeedStatusUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list seed status unauthorized response has a 4xx status code
func (o *ListSeedStatusUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list seed status unauthorized response has a 5xx status code
func (o *ListSeedStatusUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list seed status unauthorized response a status code equal to that given
func (o *ListSeedStatusUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListSeedStatusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatusUnauthorized ", 401)
}

func (o *ListSeedStatusUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatusUnauthorized ", 401)
}

func (o *ListSeedStatusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSeedStatusForbidden creates a ListSeedStatusForbidden with default headers values
func NewListSeedStatusForbidden() *ListSeedStatusForbidden {
	return &ListSeedStatusForbidden{}
}

/*
ListSeedStatusForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListSeedStatusForbidden struct {
}

// IsSuccess returns true when this list seed status forbidden response has a 2xx status code
func (o *ListSeedStatusForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list seed status forbidden response has a 3xx status code
func (o *ListSeedStatusForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list seed status forbidden response has a 4xx status code
func (o *ListSeedStatusForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list seed status forbidden response has a 5xx status code
func (o *ListSeedStatusForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list seed status forbidden response a status code equal to that given
func (o *ListSeedStatusForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListSeedStatusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatusForbidden ", 403)
}

func (o *ListSeedStatusForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatusForbidden ", 403)
}

func (o *ListSeedStatusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSeedStatusDefault creates a ListSeedStatusDefault with default headers values
func NewListSeedStatusDefault(code int) *ListSeedStatusDefault {
	return &ListSeedStatusDefault{
		_statusCode: code,
	}
}

/*
ListSeedStatusDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListSeedStatusDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list seed status default response
func (o *ListSeedStatusDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list seed status default response has a 2xx status code
func (o *ListSeedStatusDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list seed status default response has a 3xx status code
func (o *ListSeedStatusDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list seed status default response has a 4xx status code
func (o *ListSeedStatusDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list seed status default response has a 5xx status code
func (o *ListSeedStatusDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list seed status default response a status code equal to that given
func (o *ListSeedStatusDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListSeedStatusDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatus default  %+v", o._statusCode, o.Payload)
}

func (o *ListSeedStatusDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/seeds/status][%d] listSeedStatus default  %+v", o._statusCode, o.Payload)
}

func (o *ListSeedStatusDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListSeedStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
