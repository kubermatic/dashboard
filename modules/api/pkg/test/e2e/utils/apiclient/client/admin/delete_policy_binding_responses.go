// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// DeletePolicyBindingReader is a Reader for the DeletePolicyBinding structure.
type DeletePolicyBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePolicyBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePolicyBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePolicyBindingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePolicyBindingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeletePolicyBindingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeletePolicyBindingOK creates a DeletePolicyBindingOK with default headers values
func NewDeletePolicyBindingOK() *DeletePolicyBindingOK {
	return &DeletePolicyBindingOK{}
}

/*
DeletePolicyBindingOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type DeletePolicyBindingOK struct {
}

// IsSuccess returns true when this delete policy binding o k response has a 2xx status code
func (o *DeletePolicyBindingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete policy binding o k response has a 3xx status code
func (o *DeletePolicyBindingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy binding o k response has a 4xx status code
func (o *DeletePolicyBindingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete policy binding o k response has a 5xx status code
func (o *DeletePolicyBindingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy binding o k response a status code equal to that given
func (o *DeletePolicyBindingOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeletePolicyBindingOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBindingOK ", 200)
}

func (o *DeletePolicyBindingOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBindingOK ", 200)
}

func (o *DeletePolicyBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyBindingUnauthorized creates a DeletePolicyBindingUnauthorized with default headers values
func NewDeletePolicyBindingUnauthorized() *DeletePolicyBindingUnauthorized {
	return &DeletePolicyBindingUnauthorized{}
}

/*
DeletePolicyBindingUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type DeletePolicyBindingUnauthorized struct {
}

// IsSuccess returns true when this delete policy binding unauthorized response has a 2xx status code
func (o *DeletePolicyBindingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy binding unauthorized response has a 3xx status code
func (o *DeletePolicyBindingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy binding unauthorized response has a 4xx status code
func (o *DeletePolicyBindingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy binding unauthorized response has a 5xx status code
func (o *DeletePolicyBindingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy binding unauthorized response a status code equal to that given
func (o *DeletePolicyBindingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeletePolicyBindingUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBindingUnauthorized ", 401)
}

func (o *DeletePolicyBindingUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBindingUnauthorized ", 401)
}

func (o *DeletePolicyBindingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyBindingForbidden creates a DeletePolicyBindingForbidden with default headers values
func NewDeletePolicyBindingForbidden() *DeletePolicyBindingForbidden {
	return &DeletePolicyBindingForbidden{}
}

/*
DeletePolicyBindingForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type DeletePolicyBindingForbidden struct {
}

// IsSuccess returns true when this delete policy binding forbidden response has a 2xx status code
func (o *DeletePolicyBindingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy binding forbidden response has a 3xx status code
func (o *DeletePolicyBindingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy binding forbidden response has a 4xx status code
func (o *DeletePolicyBindingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy binding forbidden response has a 5xx status code
func (o *DeletePolicyBindingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy binding forbidden response a status code equal to that given
func (o *DeletePolicyBindingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeletePolicyBindingForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBindingForbidden ", 403)
}

func (o *DeletePolicyBindingForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBindingForbidden ", 403)
}

func (o *DeletePolicyBindingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyBindingDefault creates a DeletePolicyBindingDefault with default headers values
func NewDeletePolicyBindingDefault(code int) *DeletePolicyBindingDefault {
	return &DeletePolicyBindingDefault{
		_statusCode: code,
	}
}

/*
DeletePolicyBindingDefault describes a response with status code -1, with default header values.

errorResponse
*/
type DeletePolicyBindingDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete policy binding default response
func (o *DeletePolicyBindingDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete policy binding default response has a 2xx status code
func (o *DeletePolicyBindingDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete policy binding default response has a 3xx status code
func (o *DeletePolicyBindingDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete policy binding default response has a 4xx status code
func (o *DeletePolicyBindingDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete policy binding default response has a 5xx status code
func (o *DeletePolicyBindingDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete policy binding default response a status code equal to that given
func (o *DeletePolicyBindingDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeletePolicyBindingDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBinding default  %+v", o._statusCode, o.Payload)
}

func (o *DeletePolicyBindingDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings/{binding_name}][%d] deletePolicyBinding default  %+v", o._statusCode, o.Payload)
}

func (o *DeletePolicyBindingDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeletePolicyBindingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
