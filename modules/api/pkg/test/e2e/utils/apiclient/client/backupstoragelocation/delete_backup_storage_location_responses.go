// Code generated by go-swagger; DO NOT EDIT.

package backupstoragelocation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// DeleteBackupStorageLocationReader is a Reader for the DeleteBackupStorageLocation structure.
type DeleteBackupStorageLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBackupStorageLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBackupStorageLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteBackupStorageLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteBackupStorageLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteBackupStorageLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteBackupStorageLocationOK creates a DeleteBackupStorageLocationOK with default headers values
func NewDeleteBackupStorageLocationOK() *DeleteBackupStorageLocationOK {
	return &DeleteBackupStorageLocationOK{}
}

/*
DeleteBackupStorageLocationOK describes a response with status code 200, with default header values.

EmptyResponse is a empty response
*/
type DeleteBackupStorageLocationOK struct {
}

// IsSuccess returns true when this delete backup storage location o k response has a 2xx status code
func (o *DeleteBackupStorageLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete backup storage location o k response has a 3xx status code
func (o *DeleteBackupStorageLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup storage location o k response has a 4xx status code
func (o *DeleteBackupStorageLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete backup storage location o k response has a 5xx status code
func (o *DeleteBackupStorageLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup storage location o k response a status code equal to that given
func (o *DeleteBackupStorageLocationOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeleteBackupStorageLocationOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocationOK ", 200)
}

func (o *DeleteBackupStorageLocationOK) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocationOK ", 200)
}

func (o *DeleteBackupStorageLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBackupStorageLocationUnauthorized creates a DeleteBackupStorageLocationUnauthorized with default headers values
func NewDeleteBackupStorageLocationUnauthorized() *DeleteBackupStorageLocationUnauthorized {
	return &DeleteBackupStorageLocationUnauthorized{}
}

/*
DeleteBackupStorageLocationUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type DeleteBackupStorageLocationUnauthorized struct {
}

// IsSuccess returns true when this delete backup storage location unauthorized response has a 2xx status code
func (o *DeleteBackupStorageLocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup storage location unauthorized response has a 3xx status code
func (o *DeleteBackupStorageLocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup storage location unauthorized response has a 4xx status code
func (o *DeleteBackupStorageLocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete backup storage location unauthorized response has a 5xx status code
func (o *DeleteBackupStorageLocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup storage location unauthorized response a status code equal to that given
func (o *DeleteBackupStorageLocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteBackupStorageLocationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocationUnauthorized ", 401)
}

func (o *DeleteBackupStorageLocationUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocationUnauthorized ", 401)
}

func (o *DeleteBackupStorageLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBackupStorageLocationForbidden creates a DeleteBackupStorageLocationForbidden with default headers values
func NewDeleteBackupStorageLocationForbidden() *DeleteBackupStorageLocationForbidden {
	return &DeleteBackupStorageLocationForbidden{}
}

/*
DeleteBackupStorageLocationForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type DeleteBackupStorageLocationForbidden struct {
}

// IsSuccess returns true when this delete backup storage location forbidden response has a 2xx status code
func (o *DeleteBackupStorageLocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete backup storage location forbidden response has a 3xx status code
func (o *DeleteBackupStorageLocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete backup storage location forbidden response has a 4xx status code
func (o *DeleteBackupStorageLocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete backup storage location forbidden response has a 5xx status code
func (o *DeleteBackupStorageLocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete backup storage location forbidden response a status code equal to that given
func (o *DeleteBackupStorageLocationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteBackupStorageLocationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocationForbidden ", 403)
}

func (o *DeleteBackupStorageLocationForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocationForbidden ", 403)
}

func (o *DeleteBackupStorageLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBackupStorageLocationDefault creates a DeleteBackupStorageLocationDefault with default headers values
func NewDeleteBackupStorageLocationDefault(code int) *DeleteBackupStorageLocationDefault {
	return &DeleteBackupStorageLocationDefault{
		_statusCode: code,
	}
}

/*
DeleteBackupStorageLocationDefault describes a response with status code -1, with default header values.

errorResponse
*/
type DeleteBackupStorageLocationDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete backup storage location default response
func (o *DeleteBackupStorageLocationDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this delete backup storage location default response has a 2xx status code
func (o *DeleteBackupStorageLocationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete backup storage location default response has a 3xx status code
func (o *DeleteBackupStorageLocationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete backup storage location default response has a 4xx status code
func (o *DeleteBackupStorageLocationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete backup storage location default response has a 5xx status code
func (o *DeleteBackupStorageLocationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete backup storage location default response a status code equal to that given
func (o *DeleteBackupStorageLocationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *DeleteBackupStorageLocationDefault) Error() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocation default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteBackupStorageLocationDefault) String() string {
	return fmt.Sprintf("[DELETE /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation/{bsl_name}][%d] deleteBackupStorageLocation default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteBackupStorageLocationDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteBackupStorageLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
