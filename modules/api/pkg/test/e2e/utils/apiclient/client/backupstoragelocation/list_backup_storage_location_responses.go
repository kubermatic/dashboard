// Code generated by go-swagger; DO NOT EDIT.

package backupstoragelocation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListBackupStorageLocationReader is a Reader for the ListBackupStorageLocation structure.
type ListBackupStorageLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBackupStorageLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBackupStorageLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListBackupStorageLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListBackupStorageLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListBackupStorageLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListBackupStorageLocationOK creates a ListBackupStorageLocationOK with default headers values
func NewListBackupStorageLocationOK() *ListBackupStorageLocationOK {
	return &ListBackupStorageLocationOK{}
}

/*
ListBackupStorageLocationOK describes a response with status code 200, with default header values.

BackupStorageLocation
*/
type ListBackupStorageLocationOK struct {
	Payload []*models.BackupStorageLocation
}

// IsSuccess returns true when this list backup storage location o k response has a 2xx status code
func (o *ListBackupStorageLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list backup storage location o k response has a 3xx status code
func (o *ListBackupStorageLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list backup storage location o k response has a 4xx status code
func (o *ListBackupStorageLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list backup storage location o k response has a 5xx status code
func (o *ListBackupStorageLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list backup storage location o k response a status code equal to that given
func (o *ListBackupStorageLocationOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListBackupStorageLocationOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocationOK  %+v", 200, o.Payload)
}

func (o *ListBackupStorageLocationOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocationOK  %+v", 200, o.Payload)
}

func (o *ListBackupStorageLocationOK) GetPayload() []*models.BackupStorageLocation {
	return o.Payload
}

func (o *ListBackupStorageLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBackupStorageLocationUnauthorized creates a ListBackupStorageLocationUnauthorized with default headers values
func NewListBackupStorageLocationUnauthorized() *ListBackupStorageLocationUnauthorized {
	return &ListBackupStorageLocationUnauthorized{}
}

/*
ListBackupStorageLocationUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListBackupStorageLocationUnauthorized struct {
}

// IsSuccess returns true when this list backup storage location unauthorized response has a 2xx status code
func (o *ListBackupStorageLocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list backup storage location unauthorized response has a 3xx status code
func (o *ListBackupStorageLocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list backup storage location unauthorized response has a 4xx status code
func (o *ListBackupStorageLocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list backup storage location unauthorized response has a 5xx status code
func (o *ListBackupStorageLocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list backup storage location unauthorized response a status code equal to that given
func (o *ListBackupStorageLocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListBackupStorageLocationUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocationUnauthorized ", 401)
}

func (o *ListBackupStorageLocationUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocationUnauthorized ", 401)
}

func (o *ListBackupStorageLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBackupStorageLocationForbidden creates a ListBackupStorageLocationForbidden with default headers values
func NewListBackupStorageLocationForbidden() *ListBackupStorageLocationForbidden {
	return &ListBackupStorageLocationForbidden{}
}

/*
ListBackupStorageLocationForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListBackupStorageLocationForbidden struct {
}

// IsSuccess returns true when this list backup storage location forbidden response has a 2xx status code
func (o *ListBackupStorageLocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list backup storage location forbidden response has a 3xx status code
func (o *ListBackupStorageLocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list backup storage location forbidden response has a 4xx status code
func (o *ListBackupStorageLocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list backup storage location forbidden response has a 5xx status code
func (o *ListBackupStorageLocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list backup storage location forbidden response a status code equal to that given
func (o *ListBackupStorageLocationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListBackupStorageLocationForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocationForbidden ", 403)
}

func (o *ListBackupStorageLocationForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocationForbidden ", 403)
}

func (o *ListBackupStorageLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBackupStorageLocationDefault creates a ListBackupStorageLocationDefault with default headers values
func NewListBackupStorageLocationDefault(code int) *ListBackupStorageLocationDefault {
	return &ListBackupStorageLocationDefault{
		_statusCode: code,
	}
}

/*
ListBackupStorageLocationDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListBackupStorageLocationDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list backup storage location default response
func (o *ListBackupStorageLocationDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list backup storage location default response has a 2xx status code
func (o *ListBackupStorageLocationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list backup storage location default response has a 3xx status code
func (o *ListBackupStorageLocationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list backup storage location default response has a 4xx status code
func (o *ListBackupStorageLocationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list backup storage location default response has a 5xx status code
func (o *ListBackupStorageLocationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list backup storage location default response a status code equal to that given
func (o *ListBackupStorageLocationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListBackupStorageLocationDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocation default  %+v", o._statusCode, o.Payload)
}

func (o *ListBackupStorageLocationDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/backupstoragelocation][%d] listBackupStorageLocation default  %+v", o._statusCode, o.Payload)
}

func (o *ListBackupStorageLocationDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListBackupStorageLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
