// Code generated by go-swagger; DO NOT EDIT.

package vmwareclouddirector

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListProjectVMwareCloudDirectorSizingPoliciesParams creates a new ListProjectVMwareCloudDirectorSizingPoliciesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProjectVMwareCloudDirectorSizingPoliciesParams() *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	return &ListProjectVMwareCloudDirectorSizingPoliciesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProjectVMwareCloudDirectorSizingPoliciesParamsWithTimeout creates a new ListProjectVMwareCloudDirectorSizingPoliciesParams object
// with the ability to set a timeout on a request.
func NewListProjectVMwareCloudDirectorSizingPoliciesParamsWithTimeout(timeout time.Duration) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	return &ListProjectVMwareCloudDirectorSizingPoliciesParams{
		timeout: timeout,
	}
}

// NewListProjectVMwareCloudDirectorSizingPoliciesParamsWithContext creates a new ListProjectVMwareCloudDirectorSizingPoliciesParams object
// with the ability to set a context for a request.
func NewListProjectVMwareCloudDirectorSizingPoliciesParamsWithContext(ctx context.Context) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	return &ListProjectVMwareCloudDirectorSizingPoliciesParams{
		Context: ctx,
	}
}

// NewListProjectVMwareCloudDirectorSizingPoliciesParamsWithHTTPClient creates a new ListProjectVMwareCloudDirectorSizingPoliciesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProjectVMwareCloudDirectorSizingPoliciesParamsWithHTTPClient(client *http.Client) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	return &ListProjectVMwareCloudDirectorSizingPoliciesParams{
		HTTPClient: client,
	}
}

/*
ListProjectVMwareCloudDirectorSizingPoliciesParams contains all the parameters to send to the API endpoint

	for the list project v mware cloud director sizing policies operation.

	Typically these are written to a http.Request.
*/
type ListProjectVMwareCloudDirectorSizingPoliciesParams struct {

	// APIToken.
	APIToken *string

	// Credential.
	Credential *string

	// Organization.
	Organization *string

	// Password.
	Password *string

	// Username.
	Username *string

	// VDC.
	VDC *string

	/* Dc.

	   KKP Datacenter to use for endpoint
	*/
	DC string

	// ProjectID.
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list project v mware cloud director sizing policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithDefaults() *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list project v mware cloud director sizing policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithTimeout(timeout time.Duration) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithContext(ctx context.Context) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithHTTPClient(client *http.Client) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIToken adds the aPIToken to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithAPIToken(aPIToken *string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetAPIToken(aPIToken)
	return o
}

// SetAPIToken adds the apiToken to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetAPIToken(aPIToken *string) {
	o.APIToken = aPIToken
}

// WithCredential adds the credential to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithCredential(credential *string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetCredential(credential)
	return o
}

// SetCredential adds the credential to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetCredential(credential *string) {
	o.Credential = credential
}

// WithOrganization adds the organization to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithOrganization(organization *string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetOrganization(organization *string) {
	o.Organization = organization
}

// WithPassword adds the password to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithPassword(password *string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetPassword(password)
	return o
}

// SetPassword adds the password to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetPassword(password *string) {
	o.Password = password
}

// WithUsername adds the username to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithUsername(username *string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetUsername(username *string) {
	o.Username = username
}

// WithVDC adds the vDC to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithVDC(vDC *string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetVDC(vDC)
	return o
}

// SetVDC adds the vDC to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetVDC(vDC *string) {
	o.VDC = vDC
}

// WithDC adds the dc to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithDC(dc string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetDC(dc)
	return o
}

// SetDC adds the dc to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetDC(dc string) {
	o.DC = dc
}

// WithProjectID adds the projectID to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WithProjectID(projectID string) *ListProjectVMwareCloudDirectorSizingPoliciesParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the list project v mware cloud director sizing policies params
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *ListProjectVMwareCloudDirectorSizingPoliciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIToken != nil {

		// header param APIToken
		if err := r.SetHeaderParam("APIToken", *o.APIToken); err != nil {
			return err
		}
	}

	if o.Credential != nil {

		// header param Credential
		if err := r.SetHeaderParam("Credential", *o.Credential); err != nil {
			return err
		}
	}

	if o.Organization != nil {

		// header param Organization
		if err := r.SetHeaderParam("Organization", *o.Organization); err != nil {
			return err
		}
	}

	if o.Password != nil {

		// header param Password
		if err := r.SetHeaderParam("Password", *o.Password); err != nil {
			return err
		}
	}

	if o.Username != nil {

		// header param Username
		if err := r.SetHeaderParam("Username", *o.Username); err != nil {
			return err
		}
	}

	if o.VDC != nil {

		// header param VDC
		if err := r.SetHeaderParam("VDC", *o.VDC); err != nil {
			return err
		}
	}

	// path param dc
	if err := r.SetPathParam("dc", o.DC); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
