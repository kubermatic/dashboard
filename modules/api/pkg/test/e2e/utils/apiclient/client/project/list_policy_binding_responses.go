// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListPolicyBindingReader is a Reader for the ListPolicyBinding structure.
type ListPolicyBindingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPolicyBindingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPolicyBindingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPolicyBindingUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPolicyBindingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListPolicyBindingDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListPolicyBindingOK creates a ListPolicyBindingOK with default headers values
func NewListPolicyBindingOK() *ListPolicyBindingOK {
	return &ListPolicyBindingOK{}
}

/*
ListPolicyBindingOK describes a response with status code 200, with default header values.

PolicyBinding
*/
type ListPolicyBindingOK struct {
	Payload []*models.PolicyBinding
}

// IsSuccess returns true when this list policy binding o k response has a 2xx status code
func (o *ListPolicyBindingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list policy binding o k response has a 3xx status code
func (o *ListPolicyBindingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy binding o k response has a 4xx status code
func (o *ListPolicyBindingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list policy binding o k response has a 5xx status code
func (o *ListPolicyBindingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy binding o k response a status code equal to that given
func (o *ListPolicyBindingOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListPolicyBindingOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBindingOK  %+v", 200, o.Payload)
}

func (o *ListPolicyBindingOK) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBindingOK  %+v", 200, o.Payload)
}

func (o *ListPolicyBindingOK) GetPayload() []*models.PolicyBinding {
	return o.Payload
}

func (o *ListPolicyBindingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPolicyBindingUnauthorized creates a ListPolicyBindingUnauthorized with default headers values
func NewListPolicyBindingUnauthorized() *ListPolicyBindingUnauthorized {
	return &ListPolicyBindingUnauthorized{}
}

/*
ListPolicyBindingUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListPolicyBindingUnauthorized struct {
}

// IsSuccess returns true when this list policy binding unauthorized response has a 2xx status code
func (o *ListPolicyBindingUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list policy binding unauthorized response has a 3xx status code
func (o *ListPolicyBindingUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy binding unauthorized response has a 4xx status code
func (o *ListPolicyBindingUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list policy binding unauthorized response has a 5xx status code
func (o *ListPolicyBindingUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy binding unauthorized response a status code equal to that given
func (o *ListPolicyBindingUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListPolicyBindingUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBindingUnauthorized ", 401)
}

func (o *ListPolicyBindingUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBindingUnauthorized ", 401)
}

func (o *ListPolicyBindingUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPolicyBindingForbidden creates a ListPolicyBindingForbidden with default headers values
func NewListPolicyBindingForbidden() *ListPolicyBindingForbidden {
	return &ListPolicyBindingForbidden{}
}

/*
ListPolicyBindingForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListPolicyBindingForbidden struct {
}

// IsSuccess returns true when this list policy binding forbidden response has a 2xx status code
func (o *ListPolicyBindingForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list policy binding forbidden response has a 3xx status code
func (o *ListPolicyBindingForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list policy binding forbidden response has a 4xx status code
func (o *ListPolicyBindingForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list policy binding forbidden response has a 5xx status code
func (o *ListPolicyBindingForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list policy binding forbidden response a status code equal to that given
func (o *ListPolicyBindingForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListPolicyBindingForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBindingForbidden ", 403)
}

func (o *ListPolicyBindingForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBindingForbidden ", 403)
}

func (o *ListPolicyBindingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPolicyBindingDefault creates a ListPolicyBindingDefault with default headers values
func NewListPolicyBindingDefault(code int) *ListPolicyBindingDefault {
	return &ListPolicyBindingDefault{
		_statusCode: code,
	}
}

/*
ListPolicyBindingDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListPolicyBindingDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list policy binding default response
func (o *ListPolicyBindingDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this list policy binding default response has a 2xx status code
func (o *ListPolicyBindingDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list policy binding default response has a 3xx status code
func (o *ListPolicyBindingDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list policy binding default response has a 4xx status code
func (o *ListPolicyBindingDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list policy binding default response has a 5xx status code
func (o *ListPolicyBindingDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list policy binding default response a status code equal to that given
func (o *ListPolicyBindingDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ListPolicyBindingDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBinding default  %+v", o._statusCode, o.Payload)
}

func (o *ListPolicyBindingDefault) String() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/clusters/{cluster_id}/policybindings][%d] listPolicyBinding default  %+v", o._statusCode, o.Payload)
}

func (o *ListPolicyBindingDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListPolicyBindingDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
