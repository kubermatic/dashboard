// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/dashboard/v2/pkg/test/e2e/utils/apiclient/models"
)

// PatchClusterBackupStorageLocationReader is a Reader for the PatchClusterBackupStorageLocation structure.
type PatchClusterBackupStorageLocationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchClusterBackupStorageLocationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchClusterBackupStorageLocationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPatchClusterBackupStorageLocationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchClusterBackupStorageLocationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPatchClusterBackupStorageLocationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchClusterBackupStorageLocationOK creates a PatchClusterBackupStorageLocationOK with default headers values
func NewPatchClusterBackupStorageLocationOK() *PatchClusterBackupStorageLocationOK {
	return &PatchClusterBackupStorageLocationOK{}
}

/*
PatchClusterBackupStorageLocationOK describes a response with status code 200, with default header values.

ClusterBackupStorageLocation
*/
type PatchClusterBackupStorageLocationOK struct {
	Payload *models.ClusterBackupStorageLocation
}

// IsSuccess returns true when this patch cluster backup storage location o k response has a 2xx status code
func (o *PatchClusterBackupStorageLocationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch cluster backup storage location o k response has a 3xx status code
func (o *PatchClusterBackupStorageLocationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch cluster backup storage location o k response has a 4xx status code
func (o *PatchClusterBackupStorageLocationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch cluster backup storage location o k response has a 5xx status code
func (o *PatchClusterBackupStorageLocationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this patch cluster backup storage location o k response a status code equal to that given
func (o *PatchClusterBackupStorageLocationOK) IsCode(code int) bool {
	return code == 200
}

func (o *PatchClusterBackupStorageLocationOK) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocationOK  %+v", 200, o.Payload)
}

func (o *PatchClusterBackupStorageLocationOK) String() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocationOK  %+v", 200, o.Payload)
}

func (o *PatchClusterBackupStorageLocationOK) GetPayload() *models.ClusterBackupStorageLocation {
	return o.Payload
}

func (o *PatchClusterBackupStorageLocationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterBackupStorageLocation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchClusterBackupStorageLocationUnauthorized creates a PatchClusterBackupStorageLocationUnauthorized with default headers values
func NewPatchClusterBackupStorageLocationUnauthorized() *PatchClusterBackupStorageLocationUnauthorized {
	return &PatchClusterBackupStorageLocationUnauthorized{}
}

/*
PatchClusterBackupStorageLocationUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type PatchClusterBackupStorageLocationUnauthorized struct {
}

// IsSuccess returns true when this patch cluster backup storage location unauthorized response has a 2xx status code
func (o *PatchClusterBackupStorageLocationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch cluster backup storage location unauthorized response has a 3xx status code
func (o *PatchClusterBackupStorageLocationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch cluster backup storage location unauthorized response has a 4xx status code
func (o *PatchClusterBackupStorageLocationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch cluster backup storage location unauthorized response has a 5xx status code
func (o *PatchClusterBackupStorageLocationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch cluster backup storage location unauthorized response a status code equal to that given
func (o *PatchClusterBackupStorageLocationUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *PatchClusterBackupStorageLocationUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocationUnauthorized ", 401)
}

func (o *PatchClusterBackupStorageLocationUnauthorized) String() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocationUnauthorized ", 401)
}

func (o *PatchClusterBackupStorageLocationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClusterBackupStorageLocationForbidden creates a PatchClusterBackupStorageLocationForbidden with default headers values
func NewPatchClusterBackupStorageLocationForbidden() *PatchClusterBackupStorageLocationForbidden {
	return &PatchClusterBackupStorageLocationForbidden{}
}

/*
PatchClusterBackupStorageLocationForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type PatchClusterBackupStorageLocationForbidden struct {
}

// IsSuccess returns true when this patch cluster backup storage location forbidden response has a 2xx status code
func (o *PatchClusterBackupStorageLocationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch cluster backup storage location forbidden response has a 3xx status code
func (o *PatchClusterBackupStorageLocationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch cluster backup storage location forbidden response has a 4xx status code
func (o *PatchClusterBackupStorageLocationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch cluster backup storage location forbidden response has a 5xx status code
func (o *PatchClusterBackupStorageLocationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch cluster backup storage location forbidden response a status code equal to that given
func (o *PatchClusterBackupStorageLocationForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *PatchClusterBackupStorageLocationForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocationForbidden ", 403)
}

func (o *PatchClusterBackupStorageLocationForbidden) String() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocationForbidden ", 403)
}

func (o *PatchClusterBackupStorageLocationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchClusterBackupStorageLocationDefault creates a PatchClusterBackupStorageLocationDefault with default headers values
func NewPatchClusterBackupStorageLocationDefault(code int) *PatchClusterBackupStorageLocationDefault {
	return &PatchClusterBackupStorageLocationDefault{
		_statusCode: code,
	}
}

/*
PatchClusterBackupStorageLocationDefault describes a response with status code -1, with default header values.

errorResponse
*/
type PatchClusterBackupStorageLocationDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch cluster backup storage location default response
func (o *PatchClusterBackupStorageLocationDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this patch cluster backup storage location default response has a 2xx status code
func (o *PatchClusterBackupStorageLocationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this patch cluster backup storage location default response has a 3xx status code
func (o *PatchClusterBackupStorageLocationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this patch cluster backup storage location default response has a 4xx status code
func (o *PatchClusterBackupStorageLocationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this patch cluster backup storage location default response has a 5xx status code
func (o *PatchClusterBackupStorageLocationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this patch cluster backup storage location default response a status code equal to that given
func (o *PatchClusterBackupStorageLocationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PatchClusterBackupStorageLocationDefault) Error() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocation default  %+v", o._statusCode, o.Payload)
}

func (o *PatchClusterBackupStorageLocationDefault) String() string {
	return fmt.Sprintf("[PATCH /api/v2/projects/{project_id}/clusterbackupstoragelocation/{cbs_name}][%d] patchClusterBackupStorageLocation default  %+v", o._statusCode, o.Payload)
}

func (o *PatchClusterBackupStorageLocationDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchClusterBackupStorageLocationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
