// Copyright 2021 The Kubermatic Kubernetes Platform contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

@use 'sass:color';
@use 'sass:map';

@mixin theme-global($colors) {
  a {
    &:not(.mat-button-base) {
      color: map.get($colors, primary);

      i.km-icon-external-link {
        background-color: map.get($colors, primary);
      }

      &:hover {
        color: map.get($colors, primary-hover);

        i.km-icon-external-link {
          background-color: map.get($colors, primary-hover);
        }
      }
    }

    &.mat-button-disabled {
      .km-icon-mask {
        background-color: map.get($colors, text);
        opacity: 30%;
      }
    }
  }

  hr {
    border-color: map.get($colors, divider);
  }

  ::-webkit-scrollbar-thumb {
    background: map.get($colors, scrollbar);
    border-color: map.get($colors, scrollbar-background);
  }

  ::-webkit-scrollbar-corner,
  ::-webkit-scrollbar-track {
    background: map.get($colors, scrollbar-background);
  }

  .km-header {
    color: map.get($colors, text);
  }

  .km-text {
    color: map.get($colors, text);
  }

  .km-text-muted,
  .km-expand-button {
    color: map.get($colors, text-secondary);
  }

  .km-muted-bg {
    background-color: map.get($colors, text-secondary);
  }

  .km-info {
    background-color: map.get($colors, primary-hover);
  }

  .km-success {
    color: map.get($colors, indicator-green);
  }

  .km-success-bg {
    background-color: map.get($colors, indicator-green);
  }

  .km-warning {
    color: map.get($colors, indicator-orange);
  }

  .km-warning-bg {
    background-color: map.get($colors, indicator-orange);
  }

  .km-error {
    color: map.get($colors, indicator-red);
  }

  .km-error-bg {
    background-color: map.get($colors, indicator-red);
  }

  .km-unknown-bg {
    background-color: map.get($colors, changelog-deprecated);
  }

  .km-option-hover-bg:hover {
    background-color: map.get($colors, option-background-hover);
  }

  .km-new-bg {
    background-color: map.get($colors, secondary);
    border: 2px solid map.get($colors, background-app-bar);
  }

  .km-border {
    border: 1px solid map.get($colors, divider);
  }

  .km-border-dashed {
    border: 1px dashed map.get($colors, divider);
  }

  .km-icon {
    color: map.get($colors, text);
  }

  .km-icon-mask-white {
    background-color: #fff;
  }

  .km-menu-header {
    color: map.get($colors, text);
  }

  .km-code-block {
    background-color: map.get($colors, divider);
    color: map.get($colors, text);
  }

  .km-copy {
    &:hover {
      color: map.get($colors, primary);
    }

    &:active {
      color: color.adjust(map.get($colors, primary), $lightness: 50%);
    }
  }

  .km-alternative-hover:hover {
    color: map.get($colors, secondary);
  }

  .km-login-footer {
    * {
      color: #fff;
    }
  }

  .km-empty-list-msg {
    border-color: map.get($colors, divider);
  }

  .km-table-dropdown {
    background-color: transparent;

    *:not(i) {
      background-color: transparent;
    }

    td.mat-cell {
      border-top: 1px solid map.get($colors, divider);
    }

    td:first-child {
      border-left: 1px solid map.get($colors, divider);
    }

    td:last-child {
      border-right: 1px solid map.get($colors, divider);
    }

    tr {
      &.mat-row {
        &:last-of-type {
          td {
            &.mat-cell {
              border-bottom: 1px solid map.get($colors, divider);
            }
          }
        }
      }
    }
  }

  .km-table-with-frame {
    td:first-child {
      border-left: 1px solid map.get($colors, divider);
    }

    td:last-child {
      border-right: 1px solid map.get($colors, divider);
    }

    tr:last-child td.mat-cell {
      border-bottom: 1px solid map.get($colors, divider);
    }
  }

  .km-panel {
    .panel {
      background-color: map.get($colors, option-background);
      box-shadow: map.get($colors, shadow-dark);
      color: map.get($colors, text);

      .notification-info .km-icon-mask {
        background-color: map.get($colors, text-secondary);
      }

      .custom-link {
        color: map.get($colors, text);
      }
    }
  }

  .km-provider-edit-settings {
    background-color: map.get($colors, option-background);

    .mat-menu-item:not(.remove-hover) {
      &:hover {
        background-color: map.get($colors, option-background-hover);
      }
    }
  }

  .km-update-available-badge {
    border: 1px solid map.get($colors, secondary);

    .km-icon-update-available-arrow {
      background-color: map.get($colors, secondary);
    }
  }

  .km-add-machine-network {
    &:hover {
      background-color: map.get($colors, background-hover);
    }
  }

  .km-mat-row.km-pointer:hover {
    background-color: map.get($colors, background-hover);
  }

  .km-mat-footer-row {
    border-color: map.get($colors, divider);
    color: map.get($colors, text-secondary);

    &:hover {
      background-color: map.get($colors, background-hover);
    }

    button {
      background-color: transparent;
      color: map.get($colors, text-secondary);
    }
  }

  .km-label-primary {
    border-color: map.get($colors, primary);
    color: map.get($colors, text);

    &.secondary {
      border-color: map.get($colors, divider);
    }
  }

  .km-search-input {
    &.mat-form-field {
      &.mat-form-field-appearance-outline {
        &.mat-form-field-should-float {
          .mat-form-field-outline-start,
          .mat-form-field-outline-gap,
          .mat-form-field-outline-end {
            border-width: 2px;
            color: map.get($colors, primary);
          }
        }

        .mat-form-field-outline {
          color: map.get($colors, search-outline);
        }
      }

      .mat-input-element::placeholder {
        color: map.get($colors, text-secondary);
      }
    }

    i {
      background-color: map.get($colors, text-secondary);
    }
  }

  .km-randomize-btn i {
    background-color: transparent;
  }

  .mat-mdc-dialog-content {
    border-bottom: 1px solid map.get($colors, divider);
  }

  .km-notification {
    &.mat-snack-bar-container {
      background-color: map.get($colors, option-background);
    }
  }

  .mat-progress-bar.mat-accent {
    .mat-progress-bar-buffer {
      background: map.get($colors, divider);
    }

    .mat-progress-bar-fill::after {
      background-color: map.get($colors, indicator-orange);
    }
  }

  .km-quota-widget-container {
    .km-icon-circle {
      background-color: map.get($colors, indicator-red);
    }

    .km-quota-details {
      background-color: map.get($colors, option-background);
      box-shadow: map.get($colors, shadow-dark);
    }

    .km-quota-widget {
      &.widget-border {
        border: 1px solid map.get($colors, divider);
      }
    }
  }

  // style for kmValueChangedIndicator directive

  .km-value-changed {
    &:not(.mat-button-toggle-group)::after {
      background-color: map.get($colors, primary);
    }

    .mat-button-toggle-checked::after {
      background-color: map.get($colors, primary);
    }
  }

  .radio-group-column {
    .mat-radio-checked::after {
      background-color: map.get($colors, primary);
    }
  }

  .mat-form-field-infix:has(> .km-value-changed) {
    &::after {
      background-color: map.get($colors, primary);
    }
  }
}
